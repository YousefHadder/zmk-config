/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
    hold-trigger-on-release;
    hold-trigger-key-positions = <1 2 3 4 7 8 9 10>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &mt LEFT_ALT Q  &mt LEFT_SHIFT W  &mt LEFT_CONTROL E  &mt LEFT_GUI R  &kp T                        &kp Y    &mt RIGHT_GUI U  &mt RIGHT_CONTROL I  &mt RIGHT_SHIFT O  &mt RIGHT_ALT P  &kp BSLH
&kp LC(S)  &kp A           &kp S             &kp D               &kp F           &kp G                        &kp H    &kp J            &kp K                &kp L              &kp SEMI         &kp SQT
&mo 1      &kp Z           &kp X             &kp C               &kp V           &kp B                        &kp N    &kp M            &kp COMMA            &kp DOT            &kp FSLH         &kp GRAVE
                                             &mo 2               &kp BACKSPACE   &mt LA(LS(LG(LCTRL))) ESC    &kp RET  &kp SPACE        &mo 3
            >;
        };

        layer_1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_NEXT     &kp C_PLAY_PAUSE  &kp C_NEXT    &kp C_VOL_DN      &kp C_MUTE            &kp C_VOL_UP           &none              &none   &none
&none      &none                 &none                 &none          &kp LC(LA(F))     &none         &kp LEFT          &kp DOWN              &kp UP                 &kp RIGHT          &trans  &trans
&kp LSHFT  &trans                &trans                &kp LA(LC(C))  &trans            &trans        &kp LA(LC(LEFT))  &kp LA(LC(DOWN))      &kp LA(LC(UP))         &kp LA(LC(RIGHT))  &trans  &trans
                                                       &kp LGUI       &trans            &kp SPACE     &kp LA(LC(RET))   &kp LA(LC(LG(LEFT)))  &kp LA(LC(LG(RIGHT)))
            >;
        };

        layer_2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp N6   &kp N7  &kp N8    &kp N9  &kp N0  &kp MINUS
&kp CLCK   &trans        &trans        &trans        &trans        &trans       &none    &none   &none     &none   &none   &none
&none      &trans        &trans        &trans        &trans        &trans       &none    &none   &none     &none   &none   &none
                                       &kp LGUI      &trans        &kp SPACE    &kp RET  &trans  &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp LS(EQUAL)  &kp LS(N1)    &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(N5)      &kp LS(NUMBER_6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &kp LS(MINUS)
&bt BT_CLR     &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4    &trans            &trans      &trans      &trans      &trans      &trans
&trans         &trans        &trans            &trans            &trans            &trans          &trans            &trans      &trans      &trans      &trans      &trans
                                               &none             &trans            &trans          &trans            &trans      &trans
            >;
        };
    };
};
